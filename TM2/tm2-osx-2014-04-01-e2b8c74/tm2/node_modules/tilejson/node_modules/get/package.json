{
  "name": "get",
  "description": "A slightly higher-level HTTP client for node.",
  "version": "1.3.0",
  "main": "./lib/node-get/index.js",
  "keywords": [
    "http",
    "client",
    "request",
    "get"
  ],
  "url": "http://github.com/developmentseed/node-get",
  "repository": {
    "type": "git",
    "url": "git://github.com/developmentseed/node-get.git"
  },
  "author": {
    "name": "Tom MacWright",
    "email": "macwright@gmail.com"
  },
  "contributors": [
    {
      "name": "Konstantin Käfer",
      "email": "kkaefer@gmail.com"
    }
  ],
  "licenses": [
    {
      "type": "BSD"
    }
  ],
  "devDependencies": {
    "mocha": ">= 0.11",
    "jshint": "0.2.x",
    "underscore": "1.2.x",
    "docco": "0.3.x"
  },
  "engines": {
    "node": ">= 0.3.6"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "readme": "# get [![Build Status](https://secure.travis-ci.org/developmentseed/node-get.png?branch=master)](http://travis-ci.org/developmentseed/node-get)\n\n`get` is a slightly higher-level HTTP client for nodejs.\n\n## Installation\n\n    npm install get\n\nget has no dependencies.\n\nFor testing, you'll need make and [mocha](https://github.com/visionmedia/mocha).\n\nFor docs you'll need [docco](https://github.com/jashkenas/docco).\n\n## Features\n\n* Redirect following.\n* Convenience functions for downloading and getting data as string.\n* Binary-extension and basic binary detection.\n* Configurable headers\n\n## API\n\nDownloads are objects in `get`.\n\n```javascript\nvar dl = new get({ uri: 'http://google.com/' });\n```\n\nHowever, the function is [a�self-calling constructor](http://ejohn.org/blog/simple-class-instantiation/), and�thus the `new` keyword is�not necessary:\n\n```javascript\nvar dl = get({ uri: 'http://google.com/' });\n```\n\nThe get constructor can also take a plain string if you don't want to give options.\n\n```javascript\nvar dl = get('http://google.com/');\n```\n\nIt can also take other options.\n\n```javascript\nvar dl = get({\n    uri: 'http://google.com/',\n    max_redirs: 20,\n});\n```\n\nThen it exposes three main methods\n\n```javascript\ndl.asString(function(err, str) {\n    console.log(str);\n});\n```\n\nand\n\n```javascript\ndl.toDisk('myfile.txt', function(err, filename) {\n    console.log(err);\n});\n```\n\nand finally\n\n```javascript\ndl.asBuffer(function(err, data) {\n    console.log(data);\n});\n```\n\n\nThere's also a lower-level API.\n\n```javascript\ndl.perform(function(err, response) {\n    // response is just a response object, just like\n    // HTTP request, except handling redirects\n});\n```\n\nIf you give node-get an object of settings instead of a string,\nit accepts\n\n* `uri` - the address of the resource\n* `headers` - to replace its default headers with custom ones\n* `max_redirs` - the number of redirects to follow before returning an error\n* `no_proxy` - don't use a HTTP proxy, even if one is in `ENV`\n* `encoding` - When calling `.guessEncoding()`, `get` will use this instead of the default value\n\n## Example\n\n```\nvar get = require('get');\n\nget('http://google.com/').asString(function(err, data) {\n    if (err) throw err;\n    console.log(data);\n});\n```\n\n## TODO:\n\n* Guessing encoding wth headers\n* User-customizable encodings\n\n## Authors\n\n* Tom MacWright (tmcw)\n* Konstantin Kaefer (kkaefer)\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/developmentseed/node-get/issues"
  },
  "homepage": "https://github.com/developmentseed/node-get",
  "_id": "get@1.3.0",
  "dist": {
    "shasum": "f0f3de36f27bd73cb22890dcb80800ef7aea00ff"
  },
  "_from": "get@1.3.x",
  "_resolved": "https://registry.npmjs.org/get/-/get-1.3.0.tgz"
}
