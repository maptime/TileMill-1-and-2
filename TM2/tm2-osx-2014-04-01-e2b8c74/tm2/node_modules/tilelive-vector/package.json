{
  "name": "tilelive-vector",
  "version": "0.7.0",
  "main": "./index.js",
  "description": "Vector tile => raster tile backend for tilelive",
  "repository": {
    "type": "git",
    "url": "git://github.com/mapbox/tilelive-vector.git"
  },
  "licenses": [
    {
      "type": "BSD"
    }
  ],
  "dependencies": {
    "mapnik": "1.4.0",
    "tilelive": "4.5.x",
    "tar": "~0.1.18",
    "request": "~2.27.0",
    "numeral": "~1.5.3",
    "sphericalmercator": "~1.0.2"
  },
  "devDependencies": {
    "mocha": "1.3.x",
    "tilejson": "~0.6.0"
  },
  "scripts": {
    "test": "mocha -R spec"
  },
  "engines": {
    "node": "0.8.x || 0.10.x"
  },
  "readme": "tilelive-vector\n---------------\nImplements the tilelive API for rendering mapnik vector tiles to raster images.\n\n[![Build Status](https://secure.travis-ci.org/mapbox/tilelive-vector.png)](http://travis-ci.org/mapbox/tilelive-vector)\n\n### new Vector(options, callback)\n\n- *xml*: a Mapnik XML string that will be used to render vector tiles.\n- *source*: Optional, a uri string suitable for use with `tilelive.load()`. This is fallback source that will be used if no source is found as part of the Mapnik XML parameters.\n- *base*: Optional, basepath for Mapnik map. Defaults to `__dirname`.\n- *format*: Optional, target output format. Defaults to `png8:m=h`.\n- *scale*: Optional, Mapnik scale factor. Defaults to `1`.\n- *deflate*: Optional, whether to expect deflated vector tiles. Defaults to `true`.\n- *maxAge*: Optional, length of time to hold vector tiles in memory cache. Defaults to `300e3` (300 seconds).\n- *reap*: Optional, time between reaps of vector tiles in memory cache. Defaults to `60e3` (60 seconds).\n\n### Code concepts\n\n- *Backend z/x/y*: a request for a raster tile at, say, 3/3/3 does not always mean 3/3/3 is requested from the backend source. The z/x/y requested from the backend source is referred in code by `bz/bx/by` and generally represent the same or lower zoom level. This allows for features like *overzooming*, *maskLevel tiles*, and *scale factor adjustment*.\n- *Overzooming*: if a tile beyond the `maxzoom` of the backend is requested, Vector will attempt to render the tile using the parent of the request at `maxzoom`.\n- *maskLevel tiles*: to avoid requiring many duplicate or empty vector tiles to be generated at high zoom levels, the backend source can specify a `maskLevel`. If a vector tile is not initially found at some `z > maskLevel`, Vector will issue an additional request to the backend using the parent tile of of the request at `maskLevel`. This allows a lower zoom level to \"backfill\" high zoom levels.\n- *Scale factor adjustment*: the scale argument decrements the backend zoom level such that the requested tile is the visual equivalent (when viewed on the proper dpi device) of its parent counterpart. For example, `scale: 2` decrements `bz` by 1, `scale: 4` decrements by 2, and so on.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mapbox/tilelive-vector/issues"
  },
  "homepage": "https://github.com/mapbox/tilelive-vector",
  "_id": "tilelive-vector@0.7.0",
  "dist": {
    "shasum": "a25646b92e9c03c33e90db159d0cea968ee3871f"
  },
  "_from": "tilelive-vector@0.7.0",
  "_resolved": "https://registry.npmjs.org/tilelive-vector/-/tilelive-vector-0.7.0.tgz"
}
